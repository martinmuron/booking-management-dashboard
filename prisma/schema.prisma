generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Booking {
  id               String        @id @default(cuid())
  hostAwayId       String        @unique
  propertyName     String
  guestLeaderName  String
  guestLeaderEmail String
  guestLeaderPhone String?
  checkInDate      DateTime
  checkOutDate     DateTime
  numberOfGuests   Int
  roomNumber       String?
  checkInToken     String        @unique
  universalKeypadCode String?    // Universal 6-digit code for all Nuki doors
  status           BookingStatus @default(PENDING)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  guests           Guest[]
  payments         Payment[]
  virtualKeys      VirtualKey[]

  @@map("bookings")
}

model Guest {
  id           String    @id @default(cuid())
  bookingId    String
  firstName    String
  lastName     String
  dateOfBirth  DateTime?
  nationality  String?
  email        String?
  phone        String?
  isLeadGuest  Boolean   @default(false)
  createdAt    DateTime  @default(now())
  booking      Booking   @relation(fields: [bookingId], references: [id], onDelete: Cascade)

  @@map("guests")
}

model Payment {
  id                     String        @id @default(cuid())
  bookingId              String
  stripePaymentIntentId  String?       @unique
  amount                 Int
  currency               String        @default("eur")
  status                 String        @default("pending")
  paidAt                 DateTime?
  createdAt              DateTime      @default(now())
  booking                Booking       @relation(fields: [bookingId], references: [id], onDelete: Cascade)

  @@map("payments")
}

model VirtualKey {
  id            String         @id @default(cuid())
  bookingId     String
  keyType       VirtualKeyType
  nukiKeyId     String         @unique
  isActive      Boolean        @default(true)
  createdAt     DateTime       @default(now())
  deactivatedAt DateTime?
  booking       Booking        @relation(fields: [bookingId], references: [id], onDelete: Cascade)

  @@map("virtual_keys")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CHECKED_IN
  PAYMENT_PENDING
  PAYMENT_COMPLETED
  KEYS_DISTRIBUTED
  COMPLETED
  CANCELLED
}

enum VirtualKeyType {
  MAIN_ENTRANCE
  LUGGAGE_ROOM
  LAUNDRY_ROOM
  ROOM
}
